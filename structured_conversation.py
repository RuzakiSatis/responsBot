import asyncio
from datetime import datetime, timedelta
import random
from telethon import TelegramClient, events

# ==== –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç—ñ–≤ ====
accounts = [
    {
        "api_id": "24937877",
        "api_hash": "ea965beea8cbd30bdede9cd833e153df",
        "phone": "+79886102536",
        "session": "session_evelina",
        "name": "–ï–≤–µ–ª–∏–Ω–∞",
        "responses_to_messages": {
            "–ò –¥–∞ –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è –∂–¥—É –≤—Å–µ –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞ –∫–æ—à–µ–ª—ë–∫": ["–û–∫"],
            "–ö–∏–Ω—É–ª –º–∞—Ç—á. –ï—Å–ª–∏ —É –∫–æ–≥–æ-—Ç–æ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–∏—à–∏—Ç–µ": ["–û–∫"],
        },
    },
    {
        "api_id": "21939330",
        "api_hash": "7219726c15f087c480715cd868fe0a66",
        "phone": "+79899314493",
        "session": "session_jenya",
        "name": "–ñ–µ–Ω—è",
        "responses_to_messages": {
            "–†–µ–±—è—Ç–∞. –ì–æ—Ç–æ–≤–∏–º—Å—è –µ—Å—Ç—å –∏–Ω—Å–∞–π–¥. –ñ–¥—É —Ñ–∏—Ç–±–µ–∫ –ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏": ["–Ø –≥–æ—Ç–æ–≤"],
            "–ò –¥–∞ –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è –∂–¥—É –≤—Å–µ –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞ –∫–æ—à–µ–ª—ë–∫": ["–ë—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ –±–æ—Å"],
        },
    },
    {
        "api_id": "29854499",
        "api_hash": "7d96f558a03187ad9834debedb8b2f71",
        "phone": "+79827280996",
        "session": "session_iryna",
        "name": "–Ü—Ä–∏–Ω–∞",
        "responses_to_messages": {
            "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç": ["–î–æ–±—Ä—ã–π –¥–µ–Ω—å"],
        },
    },
    {
        "api_id": "21993796",
        "api_hash": "ed9bbff90ea57864f307cc56f238d4f3",
        "phone": "+79363168089",
        "session": "session_matvey",
        "name": "–ú–∞—Ç–≤—ñ–π",
        "responses_to_messages": {
            "–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç": ["–û –µ—Å—Ç—å —á—Ç–æ-—Ç–æ –¥–ª—è –Ω–∞—Å?"],
        },
    },
    {
        "api_id": "13623212",
        "api_hash": "298ac6a2c639573f64a898c9997ac214",
        "phone": "+79178691992",
        "session": "session_vanya",
        "name": "–í–∞–Ω—è",
        "responses_to_messages": {
            "–ü—Ä–∏–≤–µ—Ç": ["üëã"],
            "–†–µ–±—è—Ç–∞. –ì–æ—Ç–æ–≤–∏–º—Å—è –µ—Å—Ç—å –∏–Ω—Å–∞–π–¥. –ñ–¥—É —Ñ–∏—Ç–±–µ–∫ –ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏": ["+"],
        },
    },
    {
        "api_id": "22135148",
        "api_hash": "29a7d449bd1f1cd3dba69357f9122c76",
        "phone": "+79378670599",
        "session": "session_katya",
        "name": "–ö–∞—Ç—è",
        "responses_to_messages": {
            "–ü—Ä–∏–≤–µ—Ç": ["–•–∞—é—à–∫–∏"],
            "–†–µ–±—è—Ç–∞. –ì–æ—Ç–æ–≤–∏–º—Å—è –µ—Å—Ç—å –∏–Ω—Å–∞–π–¥. –ñ–¥—É —Ñ–∏—Ç–±–µ–∫ –ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏": ["–Ø –¥—É–º–∞—é –≤—Å–µ –≥–æ—Ç–æ–≤—ã —É–∂–µ –¥–∞–≤–Ω–æ"],
        },
    },
]

# ==== ID —á–∞—Ç–∞ ====
chat_id = -1002495997895

async def run_accounts(accounts, chat_id):
    clients = []
    last_responded = {}

    for account in accounts:
        client = TelegramClient(account["session"], account["api_id"], account["api_hash"])
        await client.start(phone=account["phone"])
        print(f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç {account['name']} –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
        clients.append((account, client))

    async def handle_incoming_messages(client, account):
        @client.on(events.NewMessage(chats=chat_id))
        async def handle_message(event):
            sender = await event.get_sender()
            if sender.is_self:
                return

            message_text = event.message.text.strip()
            user_key = (sender.id, account["name"])

            print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text} –æ—Ç {sender.id}")

            for key_phrases, responses in account["responses_to_messages"].items():
                if any(phrase.lower() in message_text.lower() for phrase in (key_phrases if isinstance(key_phrases, tuple) else [key_phrases])):
                    response = random.choice(responses)
                    await asyncio.sleep(random.randint(35, 120))
                    await event.reply(response)
                    print(f"üí¨ {account['name']} –æ—Ç–≤–µ—Ç–∏–ª: {response}")
                    last_responded[user_key] = datetime.now()
                    return

            print(f"üì© –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text}")

    tasks = []
    for account, client in clients:
        tasks.append(asyncio.create_task(handle_incoming_messages(client, account)))

    await asyncio.gather(*[client.run_until_disconnected() for _, client in clients], *tasks)

# ==== –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ====
async def main():
    await run_accounts(accounts, chat_id)

if __name__ == "__main__":
    asyncio.run(main())
